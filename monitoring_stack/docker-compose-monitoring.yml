version: "3"

services:
    
    prometheus:
        image: prom/prometheus:latest
        ports:
            - "9090:9090"
        networks:
            - monitoring
        volumes:
            - /var/dockerdata/prometheus/data:/prometheus
            - /var/dockerdata/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - /var/dockerdata/prometheus/rules:/etc/prometheus-rules
        command: "-config.file=/etc/prometheus/prometheus.yml -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles"
        labels:
            com.docker.stack.namespace: "monitoring"
            com.docker.service.name: "prometheus"
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: on-failure
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "monitoring"
                com.docker.service.name: "prometheus"

    cadvisor:
        image: google/cadvisor:latest
        ports:
            - "8081:8080"
        networks:
            - monitoring
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        labels:
            com.docker.stack.namespace: "monitoring"
            com.docker.service.name: "cadvisor"
        deploy:
            mode: global
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: on-failure
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "monitoring"
                com.docker.service.name: "cadvisor"

    node-exporter:
        image: basi/node-exporter:v0.1.1
        ports:
            - "9100:9100"
        networks:
            - monitoring
        environment:
            - HOST_HOSTNAME=/etc/hostname
        volumes:
            - /proc:/host/proc
            - /sys:/host/sys
            - /:/rootfs
            - /etc/hostname:/etc/hostname
        command: [ -collector.procfs=/host/proc,-collector.sysfs=/host/proc,-collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)",-collector.textfile.directory=/etc/node-exporter/]
        labels:
            com.docker.stack.namespace: "monitoring"
            com.docker.service.name: "node-exporter"
        deploy:
            mode: global
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: on-failure
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "monitoring"
                com.docker.service.name: "node-exporter"                     

    grafana:
        image: grafana/grafana
        ports:
            - "3000:3000"
        networks:
            - monitoring
            - logging        
        command: -e "GF_SERVER_ROOT_URL=http://grafana.local.com GF_SECURITY_ADMIN_PASSWORD=admin PROMETHEUS_ENDPOINT=http://prometheus:9090 ELASTICSEARCH_ENDPOINT=http://elasticsearch:9200"
        labels:
            com.docker.stack.namespace: "monitoring"
            com.docker.service.name: "grafana"
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 60s
            restart_policy:
                condition: on-failure
                max_attempts: 5
            labels:
                com.docker.stack.namespace: "monitoring"
                com.docker.service.name: "grafana"

networks:
    logging:
        external: true
    monitoring:
        external: true